/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package admin;

import dao.DateConverter;
import dao.AuthorDAO;
import dao.BookDAO;
import dao.UserDAO;
import exception.ApplicationException;
import java.awt.HeadlessException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.Author;
import model.Book;
import model.NewOrUpdateBook;
import org.bson.types.ObjectId;

/**
 *
 * @author sukay
 */
public class managebook extends javax.swing.JFrame {

    private BookDAO bookDAO = new BookDAO();
    private AuthorDAO authorDAO = new AuthorDAO();
//    private AdminDAO adminDAO = new AdminDAO();
    private UserDAO userDAO = new UserDAO();
    private DateConverter dateConverter = new DateConverter();

    private DefaultTableModel tblModel = new DefaultTableModel();

    private DefaultComboBoxModel comModelAuthor = new DefaultComboBoxModel();
//    private DefaultComboBoxModel comModelAdmin = new DefaultComboBoxModel();

    DefaultComboBoxModel<String> comModelChoiceStatus = new DefaultComboBoxModel();

    private Map<Integer, Book> bookTableRowIndxWithBookId = new HashMap<>();

    public managebook() {
        initComponents();
        tblModel.addColumn("STT");
        tblModel.addColumn("ISBN");
        tblModel.addColumn("Book");
        tblModel.addColumn("Author");
//        tblModel.addColumn("Admin");
        tblModel.addColumn("Price");
        tblModel.addColumn("Quantity");
        tblModel.addColumn("Remain");
        tblModel.addColumn("Create at");
        tblModel.addColumn("Update at");
        tblModel.addColumn("Status");

        TableBook.setModel(tblModel);
        //witdth của từng cột 
        TableBook.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableBook.getColumnModel().getColumn(0).setPreferredWidth(60);
        TableBook.getColumnModel().getColumn(1).setPreferredWidth(100);
        TableBook.getColumnModel().getColumn(2).setPreferredWidth(350);
        TableBook.getColumnModel().getColumn(3).setPreferredWidth(300);
//        TableBook.getColumnModel().getColumn(3).setPreferredWidth(150);
        TableBook.getColumnModel().getColumn(4).setPreferredWidth(150);
        TableBook.getColumnModel().getColumn(5).setPreferredWidth(150);
        TableBook.getColumnModel().getColumn(6).setPreferredWidth(150);
        TableBook.getColumnModel().getColumn(7).setPreferredWidth(150);
        TableBook.getColumnModel().getColumn(8).setPreferredWidth(150);
        TableBook.getColumnModel().getColumn(9).setPreferredWidth(162);

        //hiện danh sách combo box thằng Author đây này => Gọi đến hàm tìm tất cả author
        listAu.setModel(comModelAuthor);
        authorDAO.findAllAuthors()
                .forEach(comModelAuthor::addElement);

//        listAd.setModel(comModelAdmin);
//        adminDAO.findAllAdmins()
//                .forEach(comModelAdmin::addElement);
        comModelChoiceStatus.addElement("Có thể mượn");
        comModelChoiceStatus.addElement("Không thể mượn");
        listStt.setModel(comModelChoiceStatus);

        loadAllBooks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        qua = new javax.swing.JTextField();
        re = new javax.swing.JTextField();
        isbn = new javax.swing.JTextField();
        listAu = new javax.swing.JComboBox<>();
        listStt = new javax.swing.JComboBox<>();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        bo = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        up = new rojerusan.RSMaterialButtonRectangle();
        cl = new rojerusan.RSMaterialButtonRectangle();
        jLabel2 = new javax.swing.JLabel();
        ad = new rojerusan.RSMaterialButtonRectangle();
        de = new rojerusan.RSMaterialButtonRectangle();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        find = new app.bolivia.swing.JCTextField();
        se = new rojerusan.RSMaterialButtonRectangle();
        all = new rojerusan.RSMaterialButtonRectangle();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableBook = new rojeru_san.complementos.RSTableMetro();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setBackground(new java.awt.Color(51, 102, 255));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setBackground(new java.awt.Color(255, 0, 51));
        jPanel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel10MouseClicked(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adminIcons/adminIcons/icons8-undo-48 (1).png"))); // NOI18N
        jLabel15.setText("Back");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel9.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel26.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Price");
        jPanel9.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8_Collaborator_Male_26px.png"))); // NOI18N
        jPanel9.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        jLabel29.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("ISBN");
        jPanel9.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLabel30.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Quantity");
        jPanel9.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, -1, -1));

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8_Unit_26px.png"))); // NOI18N
        jPanel9.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, -1, -1));

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8_Moleskine_26px.png"))); // NOI18N
        jPanel9.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8_Contact_26px.png"))); // NOI18N
        jPanel9.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        jLabel35.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Author Name - No Update");
        jPanel9.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, -1));

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8_Unit_26px.png"))); // NOI18N
        jPanel9.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 730, -1, -1));

        jLabel37.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Status");
        jPanel9.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 680, -1, -1));

        price.setBackground(new java.awt.Color(51, 102, 255));
        price.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        price.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel9.add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, 330, 30));

        qua.setBackground(new java.awt.Color(51, 102, 255));
        qua.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        qua.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel9.add(qua, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 520, 330, 30));

        re.setBackground(new java.awt.Color(51, 102, 255));
        re.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        re.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel9.add(re, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 620, 330, 30));

        isbn.setBackground(new java.awt.Color(51, 102, 255));
        isbn.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        isbn.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel9.add(isbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 330, 30));

        listAu.setBackground(new java.awt.Color(51, 102, 255));
        listAu.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        listAu.setForeground(new java.awt.Color(255, 255, 255));
        listAu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        listAu.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel9.add(listAu, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 330, 40));

        listStt.setBackground(new java.awt.Color(51, 102, 255));
        listStt.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        listStt.setForeground(new java.awt.Color(255, 255, 255));
        listStt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        listStt.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel9.add(listStt, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 720, 330, 40));

        jLabel38.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Remain");
        jPanel9.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, -1, -1));

        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8_Unit_26px.png"))); // NOI18N
        jPanel9.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 620, -1, -1));

        bo.setBackground(new java.awt.Color(51, 102, 255));
        bo.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        bo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        jPanel9.add(bo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 330, 30));

        jLabel40.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Book Name");
        jPanel9.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        up.setBackground(new java.awt.Color(255, 0, 51));
        up.setText("UPDATE");
        up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upActionPerformed(evt);
            }
        });
        jPanel9.add(up, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 870, 150, 60));

        cl.setBackground(new java.awt.Color(255, 0, 51));
        cl.setText("CLEAR");
        cl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clActionPerformed(evt);
            }
        });
        jPanel9.add(cl, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 870, 150, 60));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/icons8-book-26 (1).png"))); // NOI18N
        jPanel9.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 30, 40));

        ad.setBackground(new java.awt.Color(255, 0, 51));
        ad.setText("ADD");
        ad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adActionPerformed(evt);
            }
        });
        jPanel9.add(ad, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 800, 150, 60));

        de.setBackground(new java.awt.Color(255, 0, 51));
        de.setText("DELETE");
        de.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deActionPerformed(evt);
            }
        });
        jPanel9.add(de, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 800, 150, 60));

        getContentPane().add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 1010));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8_Books_52px_1.png"))); // NOI18N
        jLabel1.setText("BOOKS MANAGEMENT");

        jPanel2.setBackground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        find.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        find.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        find.setPlaceholder("Search by book name"); // NOI18N

        se.setText("SEARCH");
        se.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seActionPerformed(evt);
            }
        });

        all.setText("VIEW ALL");
        all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allActionPerformed(evt);
            }
        });

        TableBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TableBook.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        TableBook.setFuenteHead(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        TableBook.setRowHeight(50);
        TableBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableBookMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableBook);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(251, 251, 251)
                .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(se, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(all, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1779, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(se, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(all, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(227, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 1760, 1140));

        setSize(new java.awt.Dimension(2160, 979));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
        admin ad = new admin();
        ad.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jPanel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseClicked
        // TODO add your handling code here:
        admin ad = new admin();
        ad.setVisible(true);
        dispose();
    }//GEN-LAST:event_jPanel10MouseClicked

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void addBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addBookActionPerformed

    private void deleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBookActionPerformed

    private void updateBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateBookActionPerformed

    private void viewAllBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllBookActionPerformed
        // TODO add your handling code here:
        loadAllBooks();
    }//GEN-LAST:event_viewAllBookActionPerformed

    private void listAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listAuthorActionPerformed

    private void tableBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBookMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tableBookMouseClicked

    private void txtRemainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRemainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRemainActionPerformed

    private void seActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seActionPerformed
        // TODO add your handling code here:
        String name = find.getText();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Thông tin tìm kiếm không được để trống");
        } else {
            List<Book> bo = bookDAO.findBookByName(name);
            if (bo == null) {
                JOptionPane.showMessageDialog(null, "Thông tin tìm kiếm không tồn tại");
            } else {
                updateUITable(bo);
            }

        }
    }

    private void updateUITable(List<Book> bo) {
        DefaultTableModel tblModel = (DefaultTableModel) TableBook.getModel();
        tblModel.setRowCount(0);
        for (int idx = 0; idx < bo.size(); idx++) {
            Book b = bo.get(idx);
            Object[] row = {
                idx,
                b.getIsbn(),
                b.getBookTitle(),
                authorDAO.findAuthorById(b.getAuthorId()).getName(),
                String.format("%,.0f VND", b.getPrice()),
                b.getQuantity(),
                b.getRemain(),
                DateConverter.DateFormat(b.getCreateAt().toString()),
                DateConverter.DateFormat(b.getUpdateAt().toString()),
                b.getStatus()
            };
            tblModel.addRow(row);
        }
    }//GEN-LAST:event_seActionPerformed

    private void allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allActionPerformed
        // TODO add your handling code here:
        loadAllBooks();
        bo.setText("");
        this.isbn.setText("");
        this.price.setText("");
        qua.setText("");
        re.setText("");
        find.setText("");
    }//GEN-LAST:event_allActionPerformed

    private void upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upActionPerformed
        try {
            int selectedRow = TableBook.getSelectedRow();
            if (selectedRow == -1) {
                return;
            }
            if (isbn.getText().isEmpty() || price.getText().isEmpty() || qua.getText().isEmpty() || re.getText().isEmpty() || bo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Không được để trống thông tin");
            } else {
                ObjectId id = bookTableRowIndxWithBookId.get(selectedRow).getId();
                NewOrUpdateBook book = updateBookFromSelectedRow(selectedRow);

                try {
                    if (bookDAO.updateBook(id, book)) {
                        this.loadAllBooks();
                        bo.setText("");
                        this.isbn.setText("");
                        this.price.setText("");
                        qua.setText("");
                        re.setText("");
                        JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                    } else {
                        JOptionPane.showMessageDialog(null, "Không thể cập nhật");
                    }
                } catch (ApplicationException ex) {
                    Logger.getLogger(managebook.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (HeadlessException ex) {
            Logger.getLogger(managebook.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_upActionPerformed

    private void clActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clActionPerformed
        // TODO add your handling code here:
        loadAllBooks();
        bo.setText("");
        this.isbn.setText("");
        this.price.setText("");
        qua.setText("");
        re.setText("");
        find.setText("");
    }//GEN-LAST:event_clActionPerformed

    private void adActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adActionPerformed
        // TODO add your handling code here:
        String ISBN = this.isbn.getText().trim();
        String bookTitle = bo.getText().trim();
        String priceText = price.getText().trim();
        String quantityText = qua.getText().trim();
        String remainText = re.getText().trim();
        if (bookTitle.isEmpty() || priceText.isEmpty() || quantityText.isEmpty() || remainText.isEmpty() || ISBN.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Không được để trống thông tin");
        } else if (bookDAO.findBookByISBN(ISBN)){
             JOptionPane.showMessageDialog(null, "Mã ISBN sách đã tồn tại");
        } else {
            try {
                float price = Float.parseFloat(priceText);
                int quantity = Integer.parseInt(quantityText);
                int remain = Integer.parseInt(remainText);

                if (quantity < 0 || price < 0 || remain < 0) {
                    JOptionPane.showMessageDialog(null, "Số lượng và giá tiền phải lớn hoặc bằng 0");

                } else {
                    Author author = (Author) listAu.getSelectedItem();
//                    Admin admin = (Admin) listAd.getSelectedItem();

//                    NewOrUpdateBook newBook = new NewOrUpdateBook();
                    Book newBook = new Book();

                    newBook.setIsbn(ISBN);
                    newBook.setBookTitle(bookTitle);
                    newBook.setAuthorId(author.getId());
//                    newBook.setAdminId(admin.getId());
                    newBook.setPrice(price);
                    newBook.setRemain(remain);
                    newBook.setQuantity(quantity);
                    newBook.setStatus((String) listStt.getSelectedItem());

                    if (bookDAO.addNewBook(newBook)) {
                        this.loadAllBooks();
                        bo.setText("");
                        this.isbn.setText("");
                        this.price.setText("");
                        qua.setText("");
                        re.setText("");
                        JOptionPane.showMessageDialog(null, "Thêm sách thành công");
                    } else {
                        JOptionPane.showMessageDialog(null, "Có lỗi xảy ra khi thêm sách");
                    }
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Giá tiền và số lượng phải là số");

            } catch (ApplicationException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());

            }
        }
    }//GEN-LAST:event_adActionPerformed

    private void deActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deActionPerformed
        // TODO add your handling code here:
        int selectedRow = TableBook.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        try {
            ObjectId id = bookTableRowIndxWithBookId.get(selectedRow).getId();
            if (bookDAO.checkBookWasBorrowed(id)) {
                JOptionPane.showMessageDialog(null, "Sach dang duoc muon khong the xoa");
            } else {
                if (bookDAO.deleteBook(id)) {
                    this.loadAllBooks();
                    JOptionPane.showMessageDialog(null, "Xóa sach thanh cong");
                } else {
                    JOptionPane.showMessageDialog(null, "Không thể xóa sách");
                }
            }
        } catch (HeadlessException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi khi xóa sách");

        }
    }//GEN-LAST:event_deActionPerformed

    private void TableBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableBookMouseClicked
        // TODO add your handling code here:
        int selectedRow = TableBook.getSelectedRow();
        try {
            Book bookFromTable = bookTableRowIndxWithBookId.get(selectedRow);

            Book book = bookDAO.findBookById(bookFromTable.getId());

            bo.setText(book.getBookTitle());
            price.setText(String.valueOf(book.getPrice()));
            qua.setText(String.valueOf(book.getQuantity()));
            re.setText(String.valueOf(book.getRemain()));
            isbn.setText(book.getIsbn());
            comModelAuthor.setSelectedItem(bookFromTable.getAuthor());

            System.out.println(bookFromTable.getAuthor());
            // hai dong ben duoi deu in ra Id
//            System.out.println(bookFromTable.getAuthorId());
            System.out.println(bookFromTable.getAuthor().getId());

//            comModelAdmin.setSelectedItem(bookFromTable.getAdmin());
            comModelChoiceStatus.setSelectedItem(book.getStatus());
        } catch (Exception e) {
            e.printStackTrace();
            //
        }
    }//GEN-LAST:event_TableBookMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(managebook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(managebook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(managebook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(managebook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new managebook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.complementos.RSTableMetro TableBook;
    private rojerusan.RSMaterialButtonRectangle ad;
    private rojerusan.RSMaterialButtonRectangle all;
    private javax.swing.JTextField bo;
    private rojerusan.RSMaterialButtonRectangle cl;
    private rojerusan.RSMaterialButtonRectangle de;
    private app.bolivia.swing.JCTextField find;
    private javax.swing.JTextField isbn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> listAu;
    private javax.swing.JComboBox<String> listStt;
    private javax.swing.JTextField price;
    private javax.swing.JTextField qua;
    private javax.swing.JTextField re;
    private rojerusan.RSMaterialButtonRectangle se;
    private rojerusan.RSMaterialButtonRectangle up;
    // End of variables declaration//GEN-END:variables

    private void loadAllBooks() {
        SwingUtilities.invokeLater(() -> {
            while (tblModel.getRowCount() > 0) {
                tblModel.removeRow(0);
            }
            List<Book> list = bookDAO.findAllBooks();
            int idx = 0;
            for (Book book : list) {
                Object[] row = {
                    idx,
                    book.getIsbn(),
                    book.getBookTitle(),
                    book.getAuthor().getName(),
                    //                    b.getAdmin().getName(),
                    String.format("%,.0f VND", book.getPrice()),
                    book.getQuantity(),
                    book.getRemain(),
                    DateConverter.DateFormat(book.getCreateAt().toString()),
                    DateConverter.DateFormat(book.getUpdateAt().toString()),
                    book.getStatus()

                };
                tblModel.addRow(row);
                bookTableRowIndxWithBookId.put(idx++, book);
            }
        });
    }

    private NewOrUpdateBook updateBookFromSelectedRow(int selectedRow) {
        NewOrUpdateBook book = new NewOrUpdateBook();
        book.setIsbn(isbn.getText());
        book.setBookTitle(bo.getText());
        book.setPrice(Float.parseFloat(price.getText()));
        book.setQuantity(Integer.parseInt(qua.getText()));
        book.setRemain(Integer.parseInt(re.getText()));
        book.setStatus(listStt.getSelectedItem().toString());

// không cho update tác giả và admin =>> tạo thông báo ra còn biết 
//        Author author = (Author) listAu.getSelectedItem();
//        Admin admin = (Admin) listAd.getSelectedItem();
//        book.setAuthorId(author.getId());
//        System.out.println(author.getId());
//        book.setAdminId(admin.getId());
//        System.out.println( "idAu khong update duoc: "+ listAu.getSelectedItem());
        return book;
    }
}
