/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package admin;

import dao.DateConverter;
import dao.UserDAO;
import exception.ApplicationException;
import java.awt.HeadlessException;
import model.NewOrUpdateUser;
import model.User;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import login_signup.SignUp;
import org.bson.types.ObjectId;
import util.Authentication;

public class manageUsers extends javax.swing.JFrame {

    private UserDAO userDAO = new UserDAO();
    private DateConverter dateConverter = new DateConverter();

    private DefaultTableModel tblModel = new DefaultTableModel();

    private Map<Integer, User> userTableRowIndxWithUserId = new HashMap<>();

    public manageUsers() {
//        this.userTableRowIndxWithUserId = new HashMap<>();
        initComponents();
        tblModel.addColumn("STT");
        tblModel.addColumn("User name");
        tblModel.addColumn("Phone number");
        tblModel.addColumn("Email");
        tblModel.addColumn("DOB");
        tblModel.addColumn("Password");

        tableUser.setModel(tblModel);
        tableUser.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tableUser.getColumnModel().getColumn(0).setPreferredWidth(50);
        tableUser.getColumnModel().getColumn(1).setPreferredWidth(250);
        tableUser.getColumnModel().getColumn(2).setPreferredWidth(150);
        tableUser.getColumnModel().getColumn(3).setPreferredWidth(200);
        tableUser.getColumnModel().getColumn(4).setPreferredWidth(200);
        tableUser.getColumnModel().getColumn(5).setPreferredWidth(293);

//        DefaultComboBoxModel<String> comModelChoiceType = new DefaultComboBoxModel();
//        comModelChoiceType.addElement("Sinh viên");
//        comModelChoiceType.addElement("Giáo viên");
        loadAllUsers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser1 = new com.raven.datechooser.DateChooser();
        jPanel9 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        clear = new javax.swing.JPanel();
        name = new app.bolivia.swing.JCTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        phone = new app.bolivia.swing.JCTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_email = new app.bolivia.swing.JCTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        dob = new app.bolivia.swing.JCTextField();
        password = new javax.swing.JPasswordField();
        delete = new rojerusan.RSMaterialButtonRectangle();
        cl = new rojerusan.RSMaterialButtonRectangle();
        update = new rojerusan.RSMaterialButtonRectangle();
        add = new rojerusan.RSMaterialButtonRectangle();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableUser = new rojeru_san.complementos.RSTableMetro();
        all = new rojerusan.RSMaterialButtonRectangle();
        se = new rojerusan.RSMaterialButtonRectangle();
        find = new app.bolivia.swing.JCTextField();

        dateChooser1.setDateFormat("dd/MM/yyyy");
        dateChooser1.setTextRefernce(dob);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setBackground(new java.awt.Color(0, 102, 255));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel12.setBackground(new java.awt.Color(255, 0, 51));
        jPanel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel12MouseClicked(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adminIcons/adminIcons/icons8-undo-48 (1).png"))); // NOI18N
        jLabel19.setText("Back");
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel9.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        clear.setBackground(new java.awt.Color(0, 102, 255));
        clear.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        name.setBackground(new java.awt.Color(0, 102, 255));
        name.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        clear.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 310, 40));

        jLabel20.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Name");
        clear.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8_Collaborator_Male_26px.png"))); // NOI18N
        clear.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, -1, -1));

        jLabel23.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Password");
        clear.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, -1));

        phone.setBackground(new java.awt.Color(0, 102, 255));
        phone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        phone.setForeground(new java.awt.Color(255, 255, 255));
        phone.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        phone.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        clear.add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 310, 40));

        jLabel24.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Phone No  -  No Update");
        clear.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Date of Birth");
        clear.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, -1, -1));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8-calendar-26.png"))); // NOI18N
        clear.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, -1, -1));

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8_Moleskine_26px.png"))); // NOI18N
        clear.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Email - No Update");
        clear.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, -1, -1));

        txt_email.setBackground(new java.awt.Color(0, 102, 255));
        txt_email.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txt_email.setForeground(new java.awt.Color(255, 255, 255));
        txt_email.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        clear.add(txt_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 310, 40));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8-email-26.png"))); // NOI18N
        clear.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 30, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8_Contact_26px.png"))); // NOI18N
        clear.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        dob.setBackground(new java.awt.Color(0, 102, 255));
        dob.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        dob.setForeground(new java.awt.Color(255, 255, 255));
        dob.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        dob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobActionPerformed(evt);
            }
        });
        clear.add(dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 530, 310, -1));

        password.setBackground(new java.awt.Color(0, 102, 255));
        password.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        password.setForeground(new java.awt.Color(255, 255, 255));
        password.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });
        clear.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 310, 30));

        delete.setBackground(new java.awt.Color(255, 0, 51));
        delete.setText("delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        clear.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 600, 150, -1));

        cl.setBackground(new java.awt.Color(255, 0, 51));
        cl.setText("clear");
        cl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clActionPerformed(evt);
            }
        });
        clear.add(cl, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 690, 150, -1));

        update.setBackground(new java.awt.Color(255, 0, 51));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        clear.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 690, 150, -1));

        add.setBackground(new java.awt.Color(255, 0, 51));
        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        clear.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 600, 150, -1));

        jPanel9.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 790));

        getContentPane().add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 830));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AddNewBookIcons/AddNewBookIcons/icons8_Student_Male_100px.png"))); // NOI18N
        jLabel1.setText("USER MANAGEMENT");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 393, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        tableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableUser.setRowHeight(50);
        tableUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableUserMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableUser);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 1150, 700));

        all.setText("VIEW");
        all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allActionPerformed(evt);
            }
        });
        jPanel1.add(all, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 40, 160, 60));

        se.setText("SEARCH");
        se.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seActionPerformed(evt);
            }
        });
        jPanel1.add(se, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 40, 160, 60));

        find.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 1, true));
        find.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        find.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        find.setPlaceholder("Search by Name....");
        jPanel1.add(find, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 260, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 0, 1230, 800));

        setSize(new java.awt.Dimension(1591, 802));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        // TODO add your handling code here:
        admin ad = new admin();
        ad.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jPanel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel12MouseClicked
        // TODO add your handling code here:
        admin ad = new admin();
        ad.setVisible(true);
        dispose();
    }//GEN-LAST:event_jPanel12MouseClicked

    private void tableUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableUserMouseClicked
        // TODO add your handling code here:
        int selectedRow = tableUser.getSelectedRow();
        User userFromTable = this.userTableRowIndxWithUserId.get(selectedRow);
        User user = this.userDAO.findUserById(userFromTable.getId());
        name.setText(user.getName());
        phone.setText(user.getPhoneNo());
        password.setText(user.getPassword());
        dob.setText(DateConverter.DateFormat(user.getDob().toString()));
        txt_email.setText(user.getEmail());

    }//GEN-LAST:event_tableUserMouseClicked

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        NewOrUpdateUser newUser = new NewOrUpdateUser();

        String dobText = dob.getText();
        String password = String.valueOf(Authentication.getMd5Password(new String(this.password.getPassword())));
        String fullName = name.getText();
        String email = txt_email.getText();
        String phoneNumber = phone.getText();
        
        User existedEmail = userDAO.findUserByEmail(email);
        User existedPhone = userDAO.findUserByPhoneNo(phoneNumber);
        if (fullName.isEmpty() || phoneNumber.isEmpty() || email.isEmpty() || dobText.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hãy nhập đủ thông tin");
        } else if (!SignUp.Validator.isValidEmail(email)) {
            JOptionPane.showMessageDialog(null, "Hãy nhập lai email");
        } else if (!SignUp.Validator.isValidPhoneNumber(phoneNumber)) {
            JOptionPane.showMessageDialog(null, "Nhập lại số điện thoại");
        } else if (existedPhone != null || existedEmail != null) {
            JOptionPane.showMessageDialog(null, "Số điện thoại hoac email đã được đăng ký");
        } else {

            newUser.setName(fullName);
            newUser.setEmail(email);
            newUser.setPhoneNo(phoneNumber);
            newUser.setPassword(password);
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            try {
                Date dobDate = dateFormat.parse(dobText);
                newUser.setDob(dobDate);
            } catch (ParseException e) {
            }
            if (userDAO.addNewUser(newUser)) {
                loadAllUsers();
                name.setText("");
                txt_email.setText("");
                phone.setText("");
                this.password.setText("");
                dob.setText("");
                JOptionPane.showMessageDialog(null, "Them thanh cong");
            } else {
                JOptionPane.showMessageDialog(null, "TCó lỗi xảy ra khi thêm");
            }
        }
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableUser.getSelectedRow();
        if (selectedRow == 0) {
            return;
        }
        try {

            ObjectId id = userTableRowIndxWithUserId.get(selectedRow).getId();
            NewOrUpdateUser user = updateUserFromSelectedRow(selectedRow);

            if (userDAO.updateUser(id, user)) {

                loadAllUsers();
                name.setText("");
                txt_email.setText("");
                phone.setText("");
                this.password.setText("");
                dob.setText("");
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
            } else {
                JOptionPane.showMessageDialog(null, "Không thể cập nhật");
            }
        } catch (ApplicationException | HeadlessException | ParseException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi cập nhâp");
        }
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableUser.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        try {
            ObjectId id = this.userTableRowIndxWithUserId.get(selectedRow).getId();
            if (userDAO.userHasBorrowBook(id)) {
                JOptionPane.showMessageDialog(null, "Không thể xóa vì đang mượn sách chưa trả");
            } else {
                if (userDAO.deleteUser(id)) {
                    loadAllUsers();
                    JOptionPane.showMessageDialog(null, "Đã xóa tài khoản người dùng");
                } else {
                    JOptionPane.showMessageDialog(null, "Khong the xóa tài khoản người dùng");
                }
            }
        } catch (ApplicationException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi khi xóa nguoi dung");
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void clActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clActionPerformed
        // TODO add your handling code here:
        this.loadAllUsers();
        name.setText("");
        txt_email.setText("");
        phone.setText("");
        this.password.setText("");
        dob.setText("");
    }//GEN-LAST:event_clActionPerformed

    private void dobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dobActionPerformed

    private void allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allActionPerformed
        // TODO add your handling code here:
        loadAllUsers();
    }//GEN-LAST:event_allActionPerformed

    private void seActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seActionPerformed
        // TODO add your handling code here:
        String name = find.getText();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Thông tin tìm kiếm không được để trống");
        } else {
            List<User> u = userDAO.findUserByName(name);
            if (u == null) {
                JOptionPane.showMessageDialog(null, "Thông tin tìm kiếm không tồn tại");
            } else {
                updateUITable(u);
            }

        }
    }//GEN-LAST:event_seActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(manageStudent1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(manageStudent1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(manageStudent1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(manageStudent1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new manageUsers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle add;
    private rojerusan.RSMaterialButtonRectangle all;
    private rojerusan.RSMaterialButtonRectangle cl;
    private javax.swing.JPanel clear;
    private com.raven.datechooser.DateChooser dateChooser1;
    private rojerusan.RSMaterialButtonRectangle delete;
    private app.bolivia.swing.JCTextField dob;
    private app.bolivia.swing.JCTextField find;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private app.bolivia.swing.JCTextField name;
    private javax.swing.JPasswordField password;
    private app.bolivia.swing.JCTextField phone;
    private rojerusan.RSMaterialButtonRectangle se;
    private rojeru_san.complementos.RSTableMetro tableUser;
    private app.bolivia.swing.JCTextField txt_email;
    private rojerusan.RSMaterialButtonRectangle update;
    // End of variables declaration//GEN-END:variables

    private void loadAllUsers() {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                // Xóa dữ liệu cũ
                while (tblModel.getRowCount() > 0) {
                    tblModel.removeRow(0);
                }
                List<User> list = userDAO.findAllUsers();
                int idx = 0;
                //cap nhat du lieu moi
                for (User u : list) {
                    Object[] row = {
                        idx,
                        u.getName(),
                        u.getPhoneNo(),
                        u.getEmail(),
                        DateConverter.DateFormat(u.getDob().toString()),
                        u.getPassword()
//                        u.getType(),

                    };
                    tblModel.addRow(row);
                    userTableRowIndxWithUserId.put(idx++, u);
                }
            }
        });
    }

    private NewOrUpdateUser updateUserFromSelectedRow(int selectRow) throws ParseException {

        String password = String.valueOf(Authentication.getMd5Password(new String(this.password.getPassword())));
        NewOrUpdateUser user = new NewOrUpdateUser();
        user.setName(name.getText());
        user.setPhoneNo(phone.getText());
        user.setEmail(txt_email.getText());
        user.setPassword(password);
        if (name.getText().isEmpty() || phone.getText().isEmpty() || txt_email.getText().isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hãy nhập đủ thông tin");
//        } else if (!SignUp.Validator.isValidEmail(txt_email.getText())) {
//            JOptionPane.showMessageDialog(null, "Hãy nhập lai email");
//        } else if (!SignUp.Validator.isValidPhoneNumber(phone.getText())) {
//            JOptionPane.showMessageDialog(null, "Nhập lại số điện thoại");

        } else {

            String dobText = dob.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            Date dobDate = dateFormat.parse(dobText);
            user.setDob(dobDate);
            return user;
        }
        return null;
    }

    private void updateUITable(List<User> user) {
        DefaultTableModel tblModel = (DefaultTableModel) tableUser.getModel();
        tblModel.setRowCount(0);
        for (int idx = 0; idx < user.size(); idx++) {
            User u = user.get(idx);
            Object[] row = {
                idx,
                u.getName(),
                u.getPhoneNo(),
                u.getEmail(),
                DateConverter.DateFormat(u.getDob().toString()),
                u.getPassword()
            };
            tblModel.addRow(row);
        }
    }
}
